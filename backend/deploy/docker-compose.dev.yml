version: "3.8"

services:
    user-service:
        build:
            context: ../services/user-service
        environment:
            DB_HOST: ${POSTGRES_HOST}
            DB_PORT: ${POSTGRES_PORT}
            DB_USER: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            DB_NAME: ${POSTGRES_DB}
            JWT_SECRET: ${JWT_SECRET}
            GRPC_PORT: ${USER_SERVICE_GRPC_PORT:-50051}
            HTTP_PORT: ${USER_SERVICE_HTTP_PORT:-8083}
        ports:
            - "${USER_SERVICE_GRPC_PORT:-50051}:${USER_SERVICE_GRPC_PORT:-50051}"
            - "${USER_SERVICE_HTTP_PORT:-8083}:${USER_SERVICE_HTTP_PORT:-8083}"
        networks:
            - deploy_default

    course-service:
        build:
            context: ../services/course-service
        environment:
            DB_HOST: ${POSTGRES_HOST}
            DB_PORT: ${POSTGRES_PORT}
            DB_USER: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            DB_NAME: ${POSTGRES_DB}
            GRPC_PORT: ${COURSE_SERVICE_GRPC_PORT:-50052}
            HTTP_PORT: ${COURSE_SERVICE_HTTP_PORT:-8002}
        ports:
            - "${COURSE_SERVICE_GRPC_PORT:-50052}:${COURSE_SERVICE_GRPC_PORT:-50052}"
            # - "${COURSE_SERVICE_HTTP_PORT:-8002}:${COURSE_SERVICE_HTTP_PORT:-8002}"
        networks:
            - deploy_default

    auth-service:
        build:
            context: ../services/auth-service
        environment:
            DB_HOST: ${POSTGRES_HOST}
            DB_PORT: ${POSTGRES_PORT}
            DB_USER: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            DB_NAME: ${POSTGRES_DB}
            JWT_SECRET: ${JWT_SECRET}
            GRPC_PORT: ${AUTH_SERVICE_GRPC_PORT:-50053}
            HTTP_PORT: ${AUTH_SERVICE_HTTP_PORT:-8084}
        ports:
            - "${AUTH_SERVICE_GRPC_PORT:-50053}:${AUTH_SERVICE_GRPC_PORT:-50053}"
            - "${AUTH_SERVICE_HTTP_PORT:-8084}:${AUTH_SERVICE_HTTP_PORT:-8084}"
        networks:
            - deploy_default

    gateway:
        build:
            context: ../gateway
        environment:
            USER_SERVICE_URL: http://user-service:${USER_SERVICE_HTTP_PORT:-8083}
            AUTH_SERVICE_URL: http://auth-service:${AUTH_SERVICE_HTTP_PORT:-8084}
            API_GATEWAY_PORT: ${API_GATEWAY_PORT:-8085}
            JWT_SECRET: ${JWT_SECRET}
            COURSE_SERVICE_URL: http://course-service:${COURSE_SERVICE_HTTP_PORT:-8082}
        ports:
            - "${API_GATEWAY_PORT:-8085}:${API_GATEWAY_PORT:-8085}"
        networks:
            - deploy_default
        depends_on:
            - user-service
            - auth-service

    postgres:
        image: postgres:14
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - "5432:5432"
        networks:
            - deploy_default
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
                ]
            interval: 10s
            timeout: 5s
            retries: 5

    migration:
        image: migrate/migrate
        command:
            [
                "-path",
                "/migrations",
                "-database",
                "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable",
                "up",
            ]
        volumes:
            - ./migrations:/migrations
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - deploy_default

networks:
    deploy_default:
        driver: bridge

volumes:
    postgres_data:
        name: myapp_postgres_data
